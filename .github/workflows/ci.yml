name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'chore: bump version')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo registry and index
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Run tests
        run: cargo test --verbose

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Check formatting
        run: cargo fmt -- --check

  build:
    name: Build Check
    runs-on: ${{ matrix.os }}
    if: "!startsWith(github.event.head_commit.message, 'chore: bump version')"
    strategy:
      matrix:
        os: [macos-latest]
        # os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and index
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Check compilation
        run: cargo check --workspace --exclude xtask --verbose

  unused-deps:
    name: Check Unused Dependencies
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'chore: bump version')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check for unused dependencies
        uses: bnjbvr/cargo-machete@main

  typos:
    name: Check Typos
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'chore: bump version')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check for typos
        uses: crate-ci/typos@master
